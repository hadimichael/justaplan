$__pantheon-padding: false !global;
$__pantheon-columns: false !global;

%cf {
	&:before, &:after {
		content: " ";
		display: table;
	}
	&:after {
		clear: both;
	}
}
%pantheon-column-base {
	float: left;
	width: 100%;
}

@mixin is-plan($columns, $padding: false) {
	$__pantheon-columns: $columns !global;
	@extend %cf;
	@if $padding != false {
		@include has-padding($padding);
	}
	@content;
	$__pantheon-columns: false !global;
	$__pantheon-padding: false !global;
}

@mixin is-column($bps...) {
	@if $__pantheon-columns == false {
		@warn "is-column called outside of is-plan.";
	}
	$fraction: 100% / $__pantheon-columns;
	@extend %pantheon-column-base;
	@extend %cf;

	@if $__pantheon-padding != false {
		padding-left: $__pantheon-padding;
		padding-right: $__pantheon-padding;
	}

	@each $rule in $bps {
		$bp: nth($rule, 1);
		$size: nth($rule, 2);
		@include bp($bp) {
			width: ($fraction * $size);
			@if length($rule) == 3 {
				$offset: nth($rule, 3);
				@include has-offset($bp $offset);
			}
		}
	}
}

@mixin has-offset($bps...) {
	@if $__pantheon-columns == false {
		@warn "is-column called outside of is-plan.";
	}
	$fraction: 100% / $__pantheon-columns;

	@each $rule in $bps {
		@include bp(nth($rule, 1)) {
			margin-left: ($fraction * nth($rule, 2));
		}
	}
}

@mixin has-padding($padding) {
	$__pantheon-padding: $padding !global;
	margin-left: -$__pantheon-padding;
	margin-right: -$__pantheon-padding;
}
